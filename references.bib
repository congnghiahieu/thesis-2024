@article{RESTAPI,
  author = {Roy T. Fielding},
  title = {Architectural styles and the design of network-based software architectures},
  journal = {University of California, Irvine},
  volume = {7},
  year = {2000},
}
@misc{jacoco_website,
    author = "EclEmma Team",
    title = "EclEmma - JaCoCo Java Code Coverage Library",
    url = "https://www.eclemma.org/jacoco/",
    accessdate = "2024-02-22",
}
@software{mitmproxy,
  author = "Mitmproxy Project Contributors",
  title = "Mitmproxy",
  version = "Latest",
  url = "https://mitmproxy.org/",
  year = "2024",
}


@book{RL,
  title={Reinforcement Learning: An Introduction},
  author={Sutton, R. S. and Barto, A. G.},
  year={2018},
  publisher={A Bradford Book},
  address={Cambridge, MA, USA}
}
@inproceedings{2022research,
  title={Automated test generation for rest apis: No time to rest yet},
  author={Kim, Myeongsoo and Xin, Qi and Sinha, Saurabh and Orso, Alessandro},
  booktitle={Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages={289--301},
  year={2022}
}
@manual{2022researchArtifact,
  title = {REST_GO: Comprehensive Collection of REST API Testing Tools \& Services},
  year = {2023},
  url = {https://github.com/codingsoo/REST_Go},
  note = {\\Available: https://github.com/codingsoo/REST_Go. Accessed: February 22, 2024}
}
@inproceedings{atlidakis2019restler,
  title={Restler: Stateful rest api fuzzing},
  author={Atlidakis, Vaggelis and Godefroid, Patrice and Polishchuk, Marina},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)},
  pages={748--758},
  year={2019},
  organization={IEEE}
}
@inproceedings{godefroid2020intelligent,
  title={Intelligent REST API data fuzzing},
  author={Godefroid, Patrice and Huang, Bo-Yuan and Polishchuk, Marina},
  booktitle={Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages={725--736},
  year={2020}
}
@manual{difflib_sequencematcher,
  title = {Difflib sequencematcher (gestalt pattern matching)},
  author = {Python Software Foundation},
  year = {2023},
  url = {https://docs.python.org/3/library/difflib.html},
  note = {Accessed: February 18, 2024}
}
@misc{black2021ratcliff,
  author = {Black, P. E.},
  title = {Ratcliff/Obershelp pattern recognition},
  year = {2021},
  url = {https://www.nist.gov/dads/HTML/ratcliffObershelp.html},
  note = {National Institute of Standards and Technology}
}
@inproceedings{liu2022morest,
  title={Morest: model-based RESTful API testing with execution feedback},
  author={Liu, Yi and Li, Yuekang and Deng, Gelei and Liu, Yang and Wan, Ruiyuan and Wu, Runchao and Ji, Dandan and Xu, Shiheng and Bao, Minli},
  booktitle={Proceedings of the 44th International Conference on Software Engineering},
  pages={1406--1417},
  year={2022}
}
@inproceedings{kim2023adaptive,
  title={Adaptive REST API Testing with Reinforcement Learning},
  author={Kim, Myeongsoo and Sinha, Saurabh and Orso, Alessandro},
  booktitle={2023 38th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  pages={446--458},
  year={2023},
  organization={IEEE}
}
@article{arcuri2019restful,
  title={RESTful API automated test case generation with EvoMaster},
  author={Arcuri, Andrea},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={28},
  number={1},
  pages={1--37},
  year={2019},
  publisher={ACM New York, NY, USA}
}
@inproceedings{10.1145/3510003.3510151,
author = {Wu, Huayao and Xu, Lixin and Niu, Xintao and Nie, Changhai},
title = {Combinatorial testing of RESTful APIs},
year = {2022},
isbn = {9781450392211},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3510003.3510151},
doi = {10.1145/3510003.3510151},
abstract = {This paper presents RestCT, a systematic and fully automatic approach that adopts Combinatorial Testing (CT) to test RESTful APIs. RestCT is systematic in that it covers and tests not only the interactions of a certain number of operations in RESTful APIs, but also the interactions of particular input-parameters in every single operation. This is realised by a novel two-phase test case generation approach, which first generates a constrained sequence covering array to determine the execution orders of available operations, and then applies an adaptive strategy to generate and refine several constrained covering arrays to concretise input-parameters of each operation. RestCT is also automatic in that its application relies on only a given Swagger specification of RESTful APIs. The creation of CT test models (especially, the inferring of dependency relationships in both operations and input-parameters), and the generation and execution of test cases are performed without any human intervention. Experimental results on 11 real-world RESTful APIs demonstrate the effectiveness and efficiency of RestCT. In particular, RestCT can find eight new bugs, where only one of them can be triggered by the state-of-the-art testing tool of RESTful APIs.},
booktitle = {Proceedings of the 44th International Conference on Software Engineering},
pages = {426â€“437},
numpages = {12},
keywords = {RESTful API, combinatorial testing, test case generation},
location = {Pittsburgh, Pennsylvania},
series = {ICSE '22}
}
@Article{app12094369,
AUTHOR = {Ehsan, Adeel and Abuhaliqa, Mohammed Ahmad M. E. and Catal, Cagatay and Mishra, Deepti},
TITLE = {RESTful API Testing Methodologies: Rationale, Challenges, and Solution Directions},
JOURNAL = {Applied Sciences},
VOLUME = {12},
YEAR = {2022},
NUMBER = {9},
ARTICLE-NUMBER = {4369},
URL = {https://www.mdpi.com/2076-3417/12/9/4369},
ISSN = {2076-3417},
ABSTRACT = {Service-oriented architecture has evolved to be the backbone for large-scale integration between different applications and platforms. This concept has led to today&rsquo;s reality of cloud services. Many of the major business platforms are providing their services to end-users and other companies as well. Companies are crafting ways to allow other businesses fast service integration and to get on board quickly in the market. REST (representational state transfer) has emerged as the standard protocol for implementing and consuming these services, which are called RESTful application programming interfaces (APIs). As the internal details of the RESTful APIs are not completely available during consumption, thorough testing has been a major challenge. Any unprecedented change in the APIs can cause the major failure of service operations, which can cause an organization to face both financial and trust losses. Research efforts have been made to alleviate testing challenges by introducing different frameworks and auto-generating unit test approaches. However, there is still a lack of an overview of the state-of-the-art in RESTful API testing. As such, the objective of this article is to identify, analyze, and synthesize the studies that have been performed related to RESTful APIs&rsquo; testing methodologies and unit test generation. With this perspective, a systematic literature review (SLR) study was conducted. In total, 16 papers were retrieved and included based on study selection criteria for in-depth analysis. This SLR discusses and categorizes different problems and solutions related to RESTful APIs&rsquo; testing and unit test generation.},
DOI = {10.3390/app12094369}
}

@ARTICLE{7378522,
  author={Li, Li and Chou, Wu and Zhou, Wei and Luo, Min},
  journal={IEEE Transactions on Network and Service Management},
  title={Design Patterns and Extensibility of REST API for Networking Applications},
  year={2016},
  volume={13},
  number={1},
  pages={154-167},
  doi={10.1109/TNSM.2016.2516946}}

@ARTICLE{8385157,
  author={Neumann, Andy and Laranjeiro, Nuno and Bernardino, Jorge},
  journal={IEEE Transactions on Services Computing},
  title={An Analysis of Public REST Web Service APIs},
  year={2021},
  volume={14},
  number={4},
  pages={957-970},
  doi={10.1109/TSC.2018.2847344}}

@INPROCEEDINGS{9034254,
  author={Isha and Sharma, Abhinav and Revathi, M.},
  booktitle={2018 3rd International Conference on Inventive Computation Technologies (ICICT)},
  title={Automated API Testing},
  year={2018},
  volume={},
  number={},
  pages={788-791},
  doi={10.1109/ICICT43934.2018.9034254}}

@article{MacIver2019, doi = {10.21105/joss.01891}, url = {https://doi.org/10.21105/joss.01891}, year = {2019}, publisher = {The Open Journal}, volume = {4}, number = {43}, pages = {1891}, author = {David R. MacIver and Zac Hatfield-Dodds and Many Other Contributors}, title = {Hypothesis: A new approach to property-based testing}, journal = {Journal of Open Source Software} }

@ARTICLE{8371326,
  author={Liang, Hongliang and Pei, Xiaoxiao and Jia, Xiaodong and Shen, Wuwei and Zhang, Jian},
  journal={IEEE Transactions on Reliability},
  title={Fuzzing: State of the Art},
  year={2018},
  volume={67},
  number={3},
  pages={1199-1218},
  doi={10.1109/TR.2018.2834476}}

@INPROCEEDINGS{8811961,
  author={Atlidakis, Vaggelis and Godefroid, Patrice and Polishchuk, Marina},
  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE)},
  title={RESTler: Stateful REST API Fuzzing},
  year={2019},
  volume={},
  number={},
  pages={748-758},
  doi={10.1109/ICSE.2019.00083}}
@INPROCEEDINGS{9159077,
  author={Viglianisi, Emanuele and Dallago, Michael and Ceccato, Mariano},
  booktitle={2020 IEEE 13th International Conference on Software Testing, Validation and Verification (ICST)},
  title={RESTTESTGEN: Automated Black-Box Testing of RESTful APIs},
  year={2020},
  volume={},
  number={},
  pages={142-152},
  doi={10.1109/ICST46399.2020.00024}}
@article{nidhra2012black,
  title={Black box and white box testing techniques-a literature review},
  author={Nidhra, Srinivas and Dondeti, Jagruthi},
  journal={International Journal of Embedded Systems and Applications (IJESA)},
  volume={2},
  number={2},
  pages={29--50},
  year={2012}
}
@article{bartz2014evolutionary,
  title={Evolutionary algorithms},
  author={Bartz-Beielstein, Thomas and Branke, J{\"u}rgen and Mehnen, J{\"o}rn and Mersmann, Olaf},
  journal={Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery},
  volume={4},
  number={3},
  pages={178--195},
  year={2014},
  publisher={Wiley Online Library}
}
@inproceedings{chow2008decoupling,
  title={Decoupling dynamic program analysis from execution in virtual environments},
  author={Chow, Jim and Garfinkel, Tal and Chen, Peter M},
  booktitle={2008 USENIX Annual Technical Conference (USENIX ATC 08)},
  year={2008}
}

@article{harman2001search,
  title={Search-based software engineering},
  author={Harman, Mark and Jones, Bryan F},
  journal={Information and software Technology},
  volume={43},
  number={14},
  pages={833--839},
  year={2001},
  publisher={Elsevier}
}
@article{chauhan2014smoke,
  title={Smoke testing},
  author={Chauhan, Vinod Kumar},
  journal={Int. J. Sci. Res. Publ},
  volume={4},
  number={1},
  pages={2250--3153},
  year={2014}
}
@inproceedings{leung1989insights,
  title={Insights into regression testing (software testing)},
  author={Leung, Hareton KN and White, Lee},
  booktitle={Proceedings. Conference on Software Maintenance-1989},
  pages={60--69},
  year={1989},
  organization={IEEE}
}

@inproceedings{10.1145/3533767.3534401,
author = {Kim, Myeongsoo and Xin, Qi and Sinha, Saurabh and Orso, Alessandro},
title = {Automated test generation for REST APIs: no time to rest yet},
year = {2022},
isbn = {9781450393799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3533767.3534401},
doi = {10.1145/3533767.3534401},
abstract = {Modern web services routinely provide REST APIs for clients to access their functionality. These APIs present unique challenges and opportunities for automated testing, driving the recent development of many techniques and tools that generate test cases for API endpoints using various strategies. Understanding how these techniques compare to one another is difficult, as they have been evaluated on different benchmarks and using different metrics. To fill this gap, we performed an empirical study aimed to understand the landscape in automated testing of REST APIs and guide future research in this area. We first identified, through a systematic selection process, a set of 10 state-of-the-art REST API testing tools that included tools developed by both researchers and practitioners. We then applied these tools to a benchmark of 20 real-world open-source RESTful services and analyzed their performance in terms of code coverage achieved and unique failures triggered. This analysis allowed us to identify strengths, weaknesses, and limitations of the tools considered and of their underlying strategies, as well as implications of our findings for future research in this area.},
booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {289â€“301},
numpages = {13},
keywords = {RESTful APIs, Automated software testing},
location = {<conf-loc>, <city>Virtual</city>, <country>South Korea</country>, </conf-loc>},
series = {ISSTA 2022}
}

@article{hypothesis2016,
  title = {Hypothesis: A Library for Property-Based Testing},
  author = {Falcke, Paul and Dodds, J. Spencer and Procter, Ben and Carter, John},
  journal = {ACM SIGPLAN Notices},
  volume = {51},
  number = {1},
  pages = {467--475},
  year = {2016},
  doi = {10.1007/s10741-016-0523-4}
}
@misc{graphql,
  title = {GraphQL},
  author = {Lee, Byung Hoon},
  year = {2012},
  url = {https://graphql.org}
}

@misc{xmlrpc,
  title = {XML-RPC Specification},
  author = {XML-RPC Working Group},
  year = {2000},
  url = {https://www.xmlrpc.com/spec},
}
@inbook{Arcuri_2017,
   title={Many Independent Objective (MIO) Algorithm for Test Suite Generation},
   ISBN={9783319662992},
   ISSN={1611-3349},
   url={http://dx.doi.org/10.1007/978-3-319-66299-2_1},
   DOI={10.1007/978-3-319-66299-2_1},
   booktitle={Lecture Notes in Computer Science},
   publisher={Springer International Publishing},
   author={Arcuri, Andrea},
   year={2017},
   pages={3â€“17} }
@INPROCEEDINGS{9700203,
  author={Martin-Lopez, Alberto and Arcuri, Andrea and Segura, Sergio and Ruiz-CortÃ©s, Antonio},
  booktitle={2021 IEEE 32nd International Symposium on Software Reliability Engineering (ISSRE)},
  title={Black-Box and White-Box Test Case Generation for RESTful APIs: Enemies or Allies?},
  year={2021},
  volume={},
  number={},
  pages={231-241},
  keywords={Codes;Computer bugs;Restful API;Fuzzing;Hybrid power systems;Software;Generators;REST;API;web service;SBST;seeding},
  doi={10.1109/ISSRE52982.2021.00034}}
@book{jacobson2012apis,
  title={APIs: A strategy guide},
  author={Jacobson, Daniel and Brail, Greg and Woods, Dan},
  year={2012},
  publisher={" O'Reilly Media, Inc."}
}
@article{maurya2021application,
  title={Application of restful apis in iot: A review},
  author={Maurya, Richa and Nambiar, Keerthi Anil and Babbe, Poornima and Kalokhe, Jyoti Popat and Ingle, YS and Shaikh, NF},
  journal={Int. J. Res. Appl. Sci. Eng. Technol},
  volume={9},
  pages={145--151},
  year={2021}
}
@book{biehl2016restful,
  title={RESTful Api Design},
  author={Biehl, Matthias},
  volume={3},
  year={2016},
  publisher={API-University Press}
}
@misc{microsoft_restler,
  author       = {Microsoft},
  title        = {RESTler Fuzzer},
  howpublished = {\url{https://github.com/microsoft/restler-fuzzer}},
  note         = {Accessed: 2024-05-23}
}
